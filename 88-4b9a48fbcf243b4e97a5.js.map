{"version":3,"sources":["webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/test/clinical-data-grid/ContentCellLayout.js","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/test/clinical-data-grid/ContentCellLayout.scss?e896","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/test/clinical-data-grid/ClinicalDataGridCommon.test.module.scss?bb04","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/test/clinical-data-grid/SelectableDataGrid.test.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","require","_propTypes","_bind","_ContentCellLayout","obj","__esModule","cx","bind","propTypes","text","string","label","ContentCellLayout","_ref","createElement","className","_default","module","_terraClinicalDataGrid","_ClinicalDataGridCommonTestModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_defineProperties","props","descriptor","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","_React$Component","SelectableDataGrid","_this","call","instance","Constructor","TypeError","_classCallCheck","this","buildSection","buildRows","state","selectedRow","undefined","selectedCell","columns","id","width","isSelectable","sortIndicator","sortedColumnId","sortedColumnDirection","protoProps","staticProps","subClass","superClass","create","_inherits","sectionId","num","_this2","rows","Array","fill","map","rowVal","rowIndex","concat","ariaLabel","isSelected","rowId","cells","cellVal","cellIndex","columnKey","columnId","component","reverse","sectionName","numberOfRows","isCollapsible","_this3","pinnedColumns","overflowColumns","sections","onColumnSelect","newColumns","columnToSort","previouslySortedColumn","setState","prevState","onCellSelect","hasSelectableRows","onRowSelect","Component"],"mappings":"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","file":"88-4b9a48fbcf243b4e97a5.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ContentCellLayout = _interopRequireDefault(require(\"./ContentCellLayout.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cx = _bind.default.bind(_ContentCellLayout.default);\n\nvar propTypes = {\n  text: _propTypes.default.string,\n  label: _propTypes.default.string\n};\n\nvar ContentCellLayout = function ContentCellLayout(_ref) {\n  var text = _ref.text,\n      label = _ref.label;\n  return _react.default.createElement(\"div\", {\n    className: cx('content-cell'),\n    \"data-cell-label\": label\n  }, text);\n};\n\nContentCellLayout.propTypes = propTypes;\nvar _default = ContentCellLayout;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-cell\":\"ContentCellLayout__content-cell___2FDKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-wrapper\":\"ClinicalDataGridCommon-test-module__content-wrapper___1Vc7k\",\"content-overflow\":\"ClinicalDataGridCommon-test-module__content-overflow___JHS2g\"};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraClinicalDataGrid = _interopRequireDefault(require(\"terra-clinical-data-grid\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ContentCellLayout = _interopRequireDefault(require(\"./ContentCellLayout\"));\n\nvar _ClinicalDataGridCommonTestModule = _interopRequireDefault(require(\"./ClinicalDataGridCommon.test.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar cx = _bind.default.bind(_ClinicalDataGridCommonTestModule.default);\n\nvar SelectableDataGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectableDataGrid, _React$Component);\n\n  function SelectableDataGrid(props) {\n    var _this;\n\n    _classCallCheck(this, SelectableDataGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectableDataGrid).call(this, props));\n    _this.buildSection = _this.buildSection.bind(_assertThisInitialized(_this));\n    _this.buildRows = _this.buildRows.bind(_assertThisInitialized(_this));\n    _this.state = {\n      selectedRow: undefined,\n      selectedCell: undefined,\n      columns: {\n        'Column-0': {\n          id: 'Column-0',\n          width: 200,\n          text: 'Column 0',\n          isSelectable: true,\n          sortIndicator: 'ascending'\n        },\n        'Column-1': {\n          id: 'Column-1',\n          width: 200,\n          text: 'Column 1',\n          isSelectable: true\n        },\n        'Column-2': {\n          id: 'Column-2',\n          width: 200,\n          text: 'Column 2',\n          isSelectable: true\n        },\n        'Column-3': {\n          id: 'Column-3',\n          width: 200,\n          text: 'Column 3',\n          isSelectable: true\n        },\n        'Column-4': {\n          id: 'Column-4',\n          width: 200,\n          text: 'Column 4',\n          isSelectable: true\n        },\n        'Column-5': {\n          id: 'Column-5',\n          width: 200,\n          text: 'Column 5',\n          isSelectable: true\n        },\n        'Column-6': {\n          id: 'Column-6',\n          width: 200,\n          text: 'Column 6',\n          isSelectable: true\n        }\n      },\n      sortedColumnId: 'Column-0',\n      sortedColumnDirection: 'ascending'\n    };\n    return _this;\n  }\n\n  _createClass(SelectableDataGrid, [{\n    key: \"buildRows\",\n    value: function buildRows(sectionId, num) {\n      var _this2 = this;\n\n      var rows = new Array(num).fill().map(function (rowVal, rowIndex) {\n        return {\n          id: \"Row-\".concat(rowIndex),\n          ariaLabel: \"Row \".concat(sectionId, \"-\").concat(rowIndex),\n          isSelectable: true,\n          isSelected: _this2.state.selectedRow && _this2.state.selectedRow.sectionId === sectionId && _this2.state.selectedRow.rowId === \"Row-\".concat(rowIndex),\n          cells: new Array(7).fill(0).map(function (cellVal, cellIndex) {\n            return \"Column-\".concat(cellIndex);\n          }).map(function (columnKey) {\n            return {\n              columnId: columnKey,\n              isSelectable: true,\n              isSelected: _this2.state.selectedCell && _this2.state.selectedCell.sectionId === sectionId && _this2.state.selectedCell.rowId === \"Row-\".concat(rowIndex) && _this2.state.selectedCell.columnId === columnKey,\n              component: _react.default.createElement(_ContentCellLayout.default, {\n                text: \"Row-\".concat(rowIndex, \", \").concat(columnKey),\n                label: \"\".concat(sectionId, \"-\").concat(rowIndex, \"-\").concat(columnKey)\n              })\n            };\n          })\n        };\n      });\n      return this.state.sortedColumnId && this.state.sortedColumnDirection === 'ascending' ? rows : rows.reverse();\n    }\n  }, {\n    key: \"buildSection\",\n    value: function buildSection(sectionId, sectionName, numberOfRows) {\n      return {\n        id: sectionId,\n        text: sectionName,\n        isCollapsible: sectionId === 'section_1',\n        rows: this.buildRows(sectionId, numberOfRows)\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var columns = this.state.columns;\n      return _react.default.createElement(\"div\", {\n        id: \"selectable-data-grid\",\n        className: cx('content-wrapper')\n      }, _react.default.createElement(_terraClinicalDataGrid.default, {\n        id: \"selections-example\",\n        pinnedColumns: [columns['Column-0'], columns['Column-1'], columns['Column-2']],\n        overflowColumns: [columns['Column-3'], columns['Column-4'], columns['Column-5'], columns['Column-6']],\n        sections: [this.buildSection('section_0', 'Section 0', 15), this.buildSection('section_1', 'Section 1', 15)],\n        fill: true,\n        onColumnSelect: function onColumnSelect(columnId) {\n          var newColumns = {};\n\n          var columnToSort = _objectSpread({}, _this3.state.columns[columnId]);\n\n          columnToSort.sortIndicator = columnToSort.sortIndicator === 'ascending' ? 'descending' : 'ascending';\n          newColumns[\"\".concat(columnId)] = columnToSort;\n\n          if (columnId !== _this3.state.sortedColumnId) {\n            var previouslySortedColumn = _objectSpread({}, _this3.state.columns[_this3.state.sortedColumnId]);\n\n            if (previouslySortedColumn) {\n              previouslySortedColumn.sortIndicator = undefined;\n              newColumns[\"\".concat(_this3.state.sortedColumnId)] = previouslySortedColumn;\n            }\n          }\n\n          _this3.setState(function (prevState) {\n            return {\n              columns: _objectSpread({}, prevState.columns, {}, newColumns),\n              sortedColumnId: columnId,\n              sortedColumnDirection: columnToSort.sortIndicator\n            };\n          });\n        },\n        onCellSelect: function onCellSelect(sectionId, rowId, columnId) {\n          _this3.setState({\n            selectedRow: undefined,\n            selectedCell: {\n              sectionId: sectionId,\n              rowId: rowId,\n              columnId: columnId\n            }\n          });\n        },\n        hasSelectableRows: true,\n        onRowSelect: function onRowSelect(sectionId, rowId) {\n          _this3.setState({\n            selectedCell: undefined,\n            selectedRow: {\n              sectionId: sectionId,\n              rowId: rowId\n            }\n          });\n        }\n      }));\n    }\n  }]);\n\n  return SelectableDataGrid;\n}(_react.default.Component);\n\nvar _default = SelectableDataGrid;\nexports.default = _default;"],"sourceRoot":""}