{"version":3,"sources":["webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/ContentCellLayout.js","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/ContentCellLayout.scss?388c","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/Datagrid.module.scss?fbe8","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithSubsections.js","webpack:///./packages/terra-clinical-data-grid/src/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithSubsections.jsx","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithSubsections.3.doc.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","require","_propTypes","_bind","_ContentCellLayout","obj","__esModule","cx","bind","propTypes","text","string","ContentCellLayout","_ref","createElement","className","_default","module","_terraButton","_terraClinicalDataGrid","_DatagridModule","_typeof","Symbol","iterator","constructor","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","Constructor","protoProps","staticProps","_setPrototypeOf","p","pinnedColumns","id","width","overflowColumns","_React$Component","DatagridWithSubsections","_this","call","instance","TypeError","_classCallCheck","this","buildSection","state","collapsedSectionId","undefined","subClass","superClass","create","_inherits","sectionId","num","Array","fill","map","rowVal","rowIndex","concat","cells","cellVal","cellIndex","columnKey","columnId","component","sectionName","numberOfRows","endAccessory","isCompact","isCollapsible","isCollapsed","rows","buildRows","_this2","sections","onRequestSectionCollapse","setState","Component","_ExampleTemplate","_DatagridWithSubsections","_DatagridWithSubsections2","description","example","exampleSrc"],"mappings":"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","file":"75-eacb91f0c2f3722b36f0.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ContentCellLayout = _interopRequireDefault(require(\"./ContentCellLayout.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cx = _bind.default.bind(_ContentCellLayout.default);\n\nvar propTypes = {\n  text: _propTypes.default.string\n};\n\nvar ContentCellLayout = function ContentCellLayout(_ref) {\n  var text = _ref.text;\n  return _react.default.createElement(\"div\", {\n    className: cx('content-cell')\n  }, text);\n};\n\nContentCellLayout.propTypes = propTypes;\nvar _default = ContentCellLayout;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-cell\":\"ContentCellLayout__content-cell___2cQUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data-grid-basic\":\"Datagrid-module__data-grid-basic___JemKm\",\"data-grid-row-style\":\"Datagrid-module__data-grid-row-style___rlH80\",\"data-grid-paging\":\"Datagrid-module__data-grid-paging___1TByK\",\"loading-overlay\":\"Datagrid-module__loading-overlay___2pZWs\"};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _terraClinicalDataGrid = _interopRequireDefault(require(\"terra-clinical-data-grid\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ContentCellLayout = _interopRequireDefault(require(\"./ContentCellLayout\"));\n\nvar _DatagridModule = _interopRequireDefault(require(\"./Datagrid.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar cx = _bind.default.bind(_DatagridModule.default);\n\nvar pinnedColumns = [{\n  id: 'Column-0',\n  width: 200,\n  text: 'Column 0'\n}, {\n  id: 'Column-1',\n  width: 200,\n  text: 'Column 1'\n}, {\n  id: 'Column-2',\n  width: 200,\n  text: 'Column 2'\n}];\nvar overflowColumns = [{\n  id: 'Column-3',\n  width: 200,\n  text: 'Column 3'\n}, {\n  id: 'Column-4',\n  width: 200,\n  text: 'Column 4'\n}, {\n  id: 'Column-5',\n  width: 200,\n  text: 'Column 5'\n}, {\n  id: 'Column-6',\n  width: 200,\n  text: 'Column 6'\n}, {\n  id: 'Column-7',\n  width: 200,\n  text: 'Column 7'\n}, {\n  id: 'Column-8',\n  width: 200,\n  text: 'Column 8'\n}, {\n  id: 'Column-9',\n  width: 200,\n  text: 'Column 9'\n}];\n\nvar DatagridWithSubsections =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DatagridWithSubsections, _React$Component);\n\n  _createClass(DatagridWithSubsections, null, [{\n    key: \"buildRows\",\n    value: function buildRows(sectionId, num) {\n      var rows = new Array(num).fill().map(function (rowVal, rowIndex) {\n        return {\n          id: \"\".concat(sectionId, \"-Row\").concat(rowIndex),\n          cells: new Array(10).fill(0).map(function (cellVal, cellIndex) {\n            return \"Column-\".concat(cellIndex);\n          }).map(function (columnKey) {\n            return {\n              columnId: columnKey,\n              component: _react.default.createElement(_ContentCellLayout.default, {\n                text: \"Row-\".concat(rowIndex, \", Column \").concat(columnKey)\n              })\n            };\n          })\n        };\n      });\n      return rows;\n    }\n  }]);\n\n  function DatagridWithSubsections(props) {\n    var _this;\n\n    _classCallCheck(this, DatagridWithSubsections);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DatagridWithSubsections).call(this, props));\n    _this.buildSection = _this.buildSection.bind(_assertThisInitialized(_this));\n    _this.state = {\n      collapsedSectionId: undefined\n    };\n    return _this;\n  }\n\n  _createClass(DatagridWithSubsections, [{\n    key: \"buildSection\",\n    value: function buildSection(sectionId, sectionName, numberOfRows) {\n      return {\n        id: sectionId,\n        text: sectionName,\n        endAccessory: sectionId === 'section_1' ? _react.default.createElement(\"span\", null, _react.default.createElement(_terraButton.default, {\n          text: \"Button 1\",\n          isCompact: true,\n          \"data-accessible-data-grid-content\": true\n        }), _react.default.createElement(_terraButton.default, {\n          text: \"Button 2\",\n          isCompact: true,\n          \"data-accessible-data-grid-content\": true\n        })) : null,\n        isCollapsible: sectionId === 'section_0',\n        isCollapsed: this.state.collapsedSectionId === sectionId,\n        rows: DatagridWithSubsections.buildRows(sectionId, numberOfRows)\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(\"div\", {\n        className: cx('data-grid-basic')\n      }, _react.default.createElement(_terraClinicalDataGrid.default, {\n        id: \"subsections-example\",\n        pinnedColumns: pinnedColumns,\n        overflowColumns: overflowColumns,\n        sections: [this.buildSection('section_0', 'Section 0', 15), this.buildSection('section_1', 'Section 1', 15), this.buildSection('section_2', 'Section 2', 15)],\n        onRequestSectionCollapse: function onRequestSectionCollapse(sectionId) {\n          if (_this2.state.collapsedSectionId === sectionId) {\n            _this2.setState({\n              collapsedSectionId: undefined\n            });\n          } else {\n            _this2.setState({\n              collapsedSectionId: sectionId\n            });\n          }\n        },\n        fill: true\n      }));\n    }\n  }]);\n\n  return DatagridWithSubsections;\n}(_react.default.Component);\n\nvar _default = DatagridWithSubsections;\nexports.default = _default;","export default \"import React from 'react';\\nimport Button from 'terra-button';\\nimport DataGrid from 'terra-clinical-data-grid';\\nimport classNames from 'classnames/bind';\\nimport ContentCellLayout from './ContentCellLayout';\\nimport styles from './Datagrid.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst pinnedColumns = [\\n  {\\n    id: 'Column-0',\\n    width: 200,\\n    text: 'Column 0',\\n  },\\n  {\\n    id: 'Column-1',\\n    width: 200,\\n    text: 'Column 1',\\n  },\\n  {\\n    id: 'Column-2',\\n    width: 200,\\n    text: 'Column 2',\\n  },\\n];\\n\\nconst overflowColumns = [\\n  {\\n    id: 'Column-3',\\n    width: 200,\\n    text: 'Column 3',\\n  },\\n  {\\n    id: 'Column-4',\\n    width: 200,\\n    text: 'Column 4',\\n  },\\n  {\\n    id: 'Column-5',\\n    width: 200,\\n    text: 'Column 5',\\n  },\\n  {\\n    id: 'Column-6',\\n    width: 200,\\n    text: 'Column 6',\\n  },\\n  {\\n    id: 'Column-7',\\n    width: 200,\\n    text: 'Column 7',\\n  },\\n  {\\n    id: 'Column-8',\\n    width: 200,\\n    text: 'Column 8',\\n  },\\n  {\\n    id: 'Column-9',\\n    width: 200,\\n    text: 'Column 9',\\n  },\\n];\\n\\nclass DatagridWithSubsections extends React.Component {\\n  static buildRows(sectionId, num) {\\n    const rows = (new Array(num)).fill().map((rowVal, rowIndex) => ({\\n      id: `${sectionId}-Row${rowIndex}`,\\n      cells: ((new Array(10).fill(0)).map((cellVal, cellIndex) => (`Column-${cellIndex}`))).map(columnKey => ({\\n        columnId: columnKey,\\n        component: <ContentCellLayout text={`Row-${rowIndex}, Column ${columnKey}`} />,\\n      })),\\n    }));\\n\\n    return rows;\\n  }\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.buildSection = this.buildSection.bind(this);\\n\\n    this.state = {\\n      collapsedSectionId: undefined,\\n    };\\n  }\\n\\n  buildSection(sectionId, sectionName, numberOfRows) {\\n    return {\\n      id: sectionId,\\n      text: sectionName,\\n      endAccessory: (sectionId === 'section_1') ? (\\n        <span>\\n          <Button text=\\\"Button 1\\\" isCompact data-accessible-data-grid-content />\\n          <Button text=\\\"Button 2\\\" isCompact data-accessible-data-grid-content />\\n        </span>\\n      ) : null,\\n      isCollapsible: sectionId === 'section_0',\\n      isCollapsed: this.state.collapsedSectionId === sectionId,\\n      rows: DatagridWithSubsections.buildRows(sectionId, numberOfRows),\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <div className={cx('data-grid-basic')}>\\n        <DataGrid\\n          id=\\\"subsections-example\\\"\\n          pinnedColumns={pinnedColumns}\\n          overflowColumns={overflowColumns}\\n          sections={[\\n            this.buildSection('section_0', 'Section 0', 15),\\n            this.buildSection('section_1', 'Section 1', 15),\\n            this.buildSection('section_2', 'Section 2', 15),\\n          ]}\\n          onRequestSectionCollapse={(sectionId) => {\\n            if (this.state.collapsedSectionId === sectionId) {\\n              this.setState({ collapsedSectionId: undefined });\\n            } else {\\n              this.setState({ collapsedSectionId: sectionId });\\n            }\\n          }}\\n          fill\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default DatagridWithSubsections;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ExampleTemplate = _interopRequireDefault(require(\"terra-doc-template/lib/ExampleTemplate\"));\n\nvar _DatagridWithSubsections = _interopRequireDefault(require(\"./DatagridWithSubsections\"));\n\nvar _DatagridWithSubsections2 = _interopRequireDefault(require(\"!raw-loader!../../../../../src/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithSubsections\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DatagridWithSubsectionsExample = function DatagridWithSubsectionsExample() {\n  return _react.default.createElement(_ExampleTemplate.default, {\n    description: \"This example features multiple subsections. Section 0 is collapsible. The header for Section 1 contains keyboard-accessible content in its endAccessory region.\",\n    example: _react.default.createElement(_DatagridWithSubsections.default, null),\n    exampleSrc: _DatagridWithSubsections2.default\n  });\n};\n\nvar _default = DatagridWithSubsectionsExample;\nexports.default = _default;"],"sourceRoot":""}