{"version":3,"sources":["webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/ContentCellLayout.js","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/ContentCellLayout.scss?388c","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/Datagrid.module.scss?fbe8","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithColumnResizing.js","webpack:///./packages/terra-clinical-data-grid/src/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithColumnResizing.jsx","webpack:///./packages/terra-clinical-data-grid/lib/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithColumnResizing.5.doc.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","require","_propTypes","_bind","_ContentCellLayout","obj","__esModule","cx","bind","propTypes","text","string","ContentCellLayout","_ref","createElement","className","_default","module","_terraClinicalDataGrid","_DatagridModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_defineProperties","props","descriptor","_createClass","Constructor","protoProps","staticProps","_setPrototypeOf","p","_React$Component","DatagridWithColumnResizing","_this","instance","TypeError","_classCallCheck","this","state","columns","id","width","isResizable","subClass","superClass","create","_inherits","sectionId","num","Array","fill","map","rowVal","rowIndex","concat","cells","cellVal","cellIndex","columnKey","columnId","component","sectionName","numberOfRows","rows","buildRows","_this2","pinnedColumns","overflowColumns","sections","buildSection","hasResizableColumns","onRequestColumnResize","columnToUpdate","Math","max","setState","prevState","Component","_ExampleTemplate","_DatagridWithColumnResizing","_DatagridWithColumnResizing2","description","example","exampleSrc"],"mappings":"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","file":"71-77a1633e90279d95926d.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ContentCellLayout = _interopRequireDefault(require(\"./ContentCellLayout.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cx = _bind.default.bind(_ContentCellLayout.default);\n\nvar propTypes = {\n  text: _propTypes.default.string\n};\n\nvar ContentCellLayout = function ContentCellLayout(_ref) {\n  var text = _ref.text;\n  return _react.default.createElement(\"div\", {\n    className: cx('content-cell')\n  }, text);\n};\n\nContentCellLayout.propTypes = propTypes;\nvar _default = ContentCellLayout;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-cell\":\"ContentCellLayout__content-cell___2cQUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data-grid-basic\":\"Datagrid-module__data-grid-basic___JemKm\",\"data-grid-row-style\":\"Datagrid-module__data-grid-row-style___rlH80\",\"data-grid-paging\":\"Datagrid-module__data-grid-paging___1TByK\",\"loading-overlay\":\"Datagrid-module__loading-overlay___2pZWs\"};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraClinicalDataGrid = _interopRequireDefault(require(\"terra-clinical-data-grid\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _ContentCellLayout = _interopRequireDefault(require(\"./ContentCellLayout\"));\n\nvar _DatagridModule = _interopRequireDefault(require(\"./Datagrid.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar cx = _bind.default.bind(_DatagridModule.default);\n\nvar DatagridWithColumnResizing =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DatagridWithColumnResizing, _React$Component);\n\n  _createClass(DatagridWithColumnResizing, null, [{\n    key: \"buildRows\",\n    value: function buildRows(sectionId, num) {\n      var rows = new Array(num).fill().map(function (rowVal, rowIndex) {\n        return {\n          id: \"Row-\".concat(rowIndex),\n          cells: new Array(9).fill(0).map(function (cellVal, cellIndex) {\n            return \"Column-\".concat(cellIndex);\n          }).map(function (columnKey) {\n            return {\n              columnId: columnKey,\n              component: _react.default.createElement(_ContentCellLayout.default, {\n                text: \"Row-\".concat(rowIndex, \", \").concat(columnKey)\n              })\n            };\n          })\n        };\n      });\n      return rows;\n    }\n  }, {\n    key: \"buildSection\",\n    value: function buildSection(sectionId, sectionName, numberOfRows) {\n      return {\n        id: sectionId,\n        text: sectionName,\n        rows: DatagridWithColumnResizing.buildRows(sectionId, numberOfRows)\n      };\n    }\n  }]);\n\n  function DatagridWithColumnResizing(props) {\n    var _this;\n\n    _classCallCheck(this, DatagridWithColumnResizing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DatagridWithColumnResizing).call(this, props));\n    _this.state = {\n      columns: {\n        'Column-0': {\n          id: 'Column-0',\n          width: 200,\n          text: 'Column 0',\n          isResizable: true\n        },\n        'Column-1': {\n          id: 'Column-1',\n          width: 250,\n          text: 'Column 1 (Not Resizable)',\n          isResizable: false\n        },\n        'Column-2': {\n          id: 'Column-2',\n          width: 200,\n          text: 'Column 2',\n          isResizable: true\n        },\n        'Column-3': {\n          id: 'Column-3',\n          width: 200,\n          text: 'Column 3',\n          isResizable: true\n        },\n        'Column-4': {\n          id: 'Column-4',\n          width: 200,\n          text: 'Column 4',\n          isResizable: true\n        },\n        'Column-5': {\n          id: 'Column-5',\n          width: 200,\n          text: 'Column 5',\n          isResizable: true\n        },\n        'Column-6': {\n          id: 'Column-6',\n          width: 200,\n          text: 'Column 6',\n          isResizable: true\n        },\n        'Column-7': {\n          id: 'Column-7',\n          width: 200,\n          text: 'Column 7',\n          isResizable: true\n        },\n        'Column-8': {\n          id: 'Column-8',\n          width: 200,\n          text: 'Column 8',\n          isResizable: true\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DatagridWithColumnResizing, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = this.state.columns;\n      return _react.default.createElement(\"div\", {\n        className: cx('data-grid-basic')\n      }, _react.default.createElement(_terraClinicalDataGrid.default, {\n        id: \"column-resize-example\",\n        pinnedColumns: [columns['Column-0'], columns['Column-1'], columns['Column-2']],\n        overflowColumns: [columns['Column-3'], columns['Column-4'], columns['Column-5'], columns['Column-6'], columns['Column-7'], columns['Column-8']],\n        sections: [DatagridWithColumnResizing.buildSection('Section-0', 'Section 0', 15), DatagridWithColumnResizing.buildSection('Section-1', 'Section 1', 15)],\n        hasResizableColumns: true,\n        fill: true,\n        onRequestColumnResize: function onRequestColumnResize(columnId, width) {\n          var columnToUpdate = _objectSpread({}, _this2.state.columns[columnId]);\n\n          columnToUpdate.width = Math.max(width, 50);\n\n          _this2.setState(function (prevState) {\n            return {\n              columns: _objectSpread({}, prevState.columns, _defineProperty({}, \"\".concat(columnId), columnToUpdate))\n            };\n          });\n        }\n      }));\n    }\n  }]);\n\n  return DatagridWithColumnResizing;\n}(_react.default.Component);\n\nvar _default = DatagridWithColumnResizing;\nexports.default = _default;","export default \"import React from 'react';\\nimport DataGrid from 'terra-clinical-data-grid';\\nimport classNames from 'classnames/bind';\\nimport ContentCellLayout from './ContentCellLayout';\\nimport styles from './Datagrid.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nclass DatagridWithColumnResizing extends React.Component {\\n  static buildRows(sectionId, num) {\\n    const rows = (new Array(num)).fill().map((rowVal, rowIndex) => ({\\n      id: `Row-${rowIndex}`,\\n      cells: ((new Array(9).fill(0)).map((cellVal, cellIndex) => (`Column-${cellIndex}`))).map(columnKey => ({\\n        columnId: columnKey,\\n        component: <ContentCellLayout text={`Row-${rowIndex}, ${columnKey}`} />,\\n      })),\\n    }));\\n\\n    return rows;\\n  }\\n\\n  static buildSection(sectionId, sectionName, numberOfRows) {\\n    return {\\n      id: sectionId,\\n      text: sectionName,\\n      rows: DatagridWithColumnResizing.buildRows(sectionId, numberOfRows),\\n    };\\n  }\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      columns: {\\n        'Column-0': {\\n          id: 'Column-0',\\n          width: 200,\\n          text: 'Column 0',\\n          isResizable: true,\\n        },\\n        'Column-1': {\\n          id: 'Column-1',\\n          width: 250,\\n          text: 'Column 1 (Not Resizable)',\\n          isResizable: false,\\n        },\\n        'Column-2': {\\n          id: 'Column-2',\\n          width: 200,\\n          text: 'Column 2',\\n          isResizable: true,\\n        },\\n        'Column-3': {\\n          id: 'Column-3',\\n          width: 200,\\n          text: 'Column 3',\\n          isResizable: true,\\n        },\\n        'Column-4': {\\n          id: 'Column-4',\\n          width: 200,\\n          text: 'Column 4',\\n          isResizable: true,\\n        },\\n        'Column-5': {\\n          id: 'Column-5',\\n          width: 200,\\n          text: 'Column 5',\\n          isResizable: true,\\n        },\\n        'Column-6': {\\n          id: 'Column-6',\\n          width: 200,\\n          text: 'Column 6',\\n          isResizable: true,\\n        },\\n        'Column-7': {\\n          id: 'Column-7',\\n          width: 200,\\n          text: 'Column 7',\\n          isResizable: true,\\n        },\\n        'Column-8': {\\n          id: 'Column-8',\\n          width: 200,\\n          text: 'Column 8',\\n          isResizable: true,\\n        },\\n      },\\n    };\\n  }\\n\\n  render() {\\n    const { columns } = this.state;\\n\\n    return (\\n      <div className={cx('data-grid-basic')}>\\n        <DataGrid\\n          id=\\\"column-resize-example\\\"\\n          pinnedColumns={[\\n            columns['Column-0'],\\n            columns['Column-1'],\\n            columns['Column-2'],\\n          ]}\\n          overflowColumns={[\\n            columns['Column-3'],\\n            columns['Column-4'],\\n            columns['Column-5'],\\n            columns['Column-6'],\\n            columns['Column-7'],\\n            columns['Column-8'],\\n          ]}\\n          sections={[\\n            DatagridWithColumnResizing.buildSection('Section-0', 'Section 0', 15),\\n            DatagridWithColumnResizing.buildSection('Section-1', 'Section 1', 15),\\n          ]}\\n          hasResizableColumns\\n          fill\\n          onRequestColumnResize={(columnId, width) => {\\n            const columnToUpdate = { ...this.state.columns[columnId] };\\n            columnToUpdate.width = Math.max(width, 50);\\n            this.setState(prevState => (\\n              { columns: { ...prevState.columns, [`${columnId}`]: columnToUpdate } }\\n            ));\\n          }}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default DatagridWithColumnResizing;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ExampleTemplate = _interopRequireDefault(require(\"terra-doc-template/lib/ExampleTemplate\"));\n\nvar _DatagridWithColumnResizing = _interopRequireDefault(require(\"./DatagridWithColumnResizing\"));\n\nvar _DatagridWithColumnResizing2 = _interopRequireDefault(require(\"!raw-loader!../../../../../src/terra-dev-site/doc/clinical-data-grid/DatagridExamples.2/DatagridWithColumnResizing\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DatagridWithColumnResizingExample = function DatagridWithColumnResizingExample() {\n  return _react.default.createElement(_ExampleTemplate.default, {\n    description: \"This example features column resizing using the draggable resize region in the column header. Resizing for Column 1 is explicitly disabled.\",\n    example: _react.default.createElement(_DatagridWithColumnResizing.default, null),\n    exampleSrc: _DatagridWithColumnResizing2.default\n  });\n};\n\nvar _default = DatagridWithColumnResizingExample;\nexports.default = _default;"],"sourceRoot":""}