(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{1192:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextStyles=t.default=void 0;var a=l(n(0)),s=l(n(2)),o=l(n(4)),r=l(n(1195)),i=l(n(1194));function l(e){return e&&e.__esModule?e:{default:e}}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var m=o.default.bind(r.default),p={PRIMARY:"primary",SECONDARY:"secondary",ATTENTION:"attention",STRIKETHROUGH:"strikeThrough",STRONG:"strong"};t.TextStyles=p;var f={text:s.default.string,textStyle:s.default.oneOf(Object.values(p)),isTruncated:s.default.bool,isDisabled:s.default.bool,icon:s.default.element,iconAlignment:s.default.oneOf(["center","top","inline"])},y={text:"",textStyle:void 0,isTruncated:!1,isDisabled:!1,icon:void 0,iconAlignment:"center"},_=function(e){var t,n=e.text,s=e.textStyle,o=e.isTruncated,r=e.isDisabled,i=e.icon,l=e.iconAlignment,f=u(e,["text","textStyle","isTruncated","isDisabled","icon","iconAlignment"]),y=m(["item-display",{"is-disabled":r},d({},"icon-".concat(l),i),f.className]),_=m(["text",{"is-truncated":o},d({"strike-through":s===p.STRIKETHROUGH},"".concat(s),s)]);return i&&(t=a.default.createElement("div",{className:m("icon")},i)),a.default.createElement("div",c({},f,{className:y}),t,a.default.createElement("div",{"data-terra-clinical-item-display-text":!0,className:_},n))};_.propTypes=f,_.defaultProps=y,_.Comment=i.default;var w=_;t.default=w},1194:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=c(n(0)),s=c(n(2)),o=c(n(4)),r=c(n(1196)),i=c(n(1192)),l=c(n(1197));function c(e){return e&&e.__esModule?e:{default:e}}function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function u(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var m=o.default.bind(l.default),p={text:s.default.string,isTruncated:s.default.bool},f=function(e){var t=e.text,n=e.isTruncated,s=u(e,["text","isTruncated"]);return a.default.createElement(i.default,d({text:t,isTruncated:n,icon:a.default.createElement(r.default,{className:m("inline-icon")})},s,{className:m("item-comment",s.className)}))};f.propTypes=p,f.defaultProps={text:"",isTruncated:!1};var y=f;t.default=y},1195:function(e,t,n){e.exports={"item-display":"ItemDisplay-module__item-display___3yi9q",text:"ItemDisplay-module__text___c-QUG",icon:"ItemDisplay-module__icon___SD1FM","icon-center":"ItemDisplay-module__icon-center___2_JkX","icon-top":"ItemDisplay-module__icon-top___19Qjs","icon-inline":"ItemDisplay-module__icon-inline___28SMk","is-truncated":"ItemDisplay-module__is-truncated___2UWjL","is-disabled":"ItemDisplay-module__is-disabled___1nKWv",primary:"ItemDisplay-module__primary___2ezQp",secondary:"ItemDisplay-module__secondary___3UcUl",attention:"ItemDisplay-module__attention___3lc20",strong:"ItemDisplay-module__strong___EtBtH","strike-through":"ItemDisplay-module__strike-through___1ixOq"}},1196:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),s=o(n(20));function o(e){return e&&e.__esModule?e:{default:e}}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i=function(e){var t=r({},e);return a.default.createElement(s.default,t,a.default.createElement("path",{d:"M46 2.1H2a2 2 0 00-2 2v28a2 2 0 002 2h31.2L45 45.9V34.1h1a2 2 0 002-2v-28a2 2 0 00-2-2z"}))};i.displayName="IconComment",i.defaultProps={className:"",viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg","data-name":"Layer 1",isBidi:!0};var l=i;t.default=l},1197:function(e,t,n){e.exports={"item-comment":"ItemComment-module__item-comment___3CMDj","inline-icon":"ItemComment-module__inline-icon___3zuUm"}},1201:function(e,t){},1202:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AccessoryAlignments=t.TextEmphasisTypes=t.Layouts=t.default=void 0;var a=l(n(0)),s=l(n(2)),o=l(n(4)),r=l(n(1192)),i=l(n(1212));function l(e){return e&&e.__esModule?e:{default:e}}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function d(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var u=o.default.bind(i.default),m={ONE_COLUMN:"oneColumn",TWO_COLUMNS:"twoColumns"};t.Layouts=m;var p={DEFAULT:"default",START:"start"};t.TextEmphasisTypes=p;var f={ALIGN_TOP:"alignTop",ALIGN_CENTER:"alignCenter"};t.AccessoryAlignments=f;var y={layout:s.default.oneOf(Object.values(m)),textEmphasis:s.default.oneOf(Object.values(p)),isTruncated:s.default.bool,accessoryAlignment:s.default.oneOf(Object.values(f)),startAccessory:s.default.node,reserveStartAccessorySpace:s.default.bool,endAccessory:s.default.node,displays:s.default.arrayOf(s.default.element),comment:s.default.node,refCallback:s.default.func},_={layout:m.ONE_COLUMN,textEmphasis:p.DEFAULT,isTruncated:!1,accessoryAlignment:f.ALIGN_CENTER,startAccessory:void 0,reserveStartAccessorySpace:!1,endAccessory:void 0,displays:[],comment:void 0},w=function(e,t,n,s){var o;if(e||t){var r=u("accessory","".concat(s,"-accessory"),{"accessory-align-center":n===f.ALIGN_CENTER},{"accessory-align-top":n===f.ALIGN_TOP});o=a.default.createElement("div",{className:r},e)}return o},v=function(e,t){var n="content-primary-size",a="content-primary-color";return e>0&&(n="content-secondary-size"),2===t&&1===e?a="content-secondary-color":e>=2&&(a="content-secondary-color"),[n,a]},I=function(e,t,n,a){var s;return s=a===p.START?function(e,t,n){return 1===n?["content-secondary-size","content-secondary-color"]:v(e,t)}(e,t,n):v(e,t),["content"].concat(s)},x=function(e,t,n){if(null!=e&&e.length){for(var s=[],o=e.slice(0,8),r=t===m.TWO_COLUMNS?2:1;o.length;)s.push(o.splice(0,r));return a.default.createElement("div",{className:u("row-container")},s.map((function(e,t){return function(e,t,n,s){var o=t;return a.default.createElement("div",{className:u("row"),key:o},e.map((function(e,o){var r=o,i=I(t,n,o,s);return a.default.createElement("div",{className:u(i),key:r},e)})))}(e,t,s.length,n)})))}},h=function(e){var t=e.layout,n=e.textEmphasis,s=e.isTruncated,o=e.accessoryAlignment,r=e.startAccessory,i=e.reserveStartAccessorySpace,l=e.endAccessory,p=e.displays,f=e.comment,y=e.refCallback,_=d(e,["layout","textEmphasis","isTruncated","accessoryAlignment","startAccessory","reserveStartAccessorySpace","endAccessory","displays","comment","refCallback"]),v=u(["item-view",{"is-truncated":s},{"one-column":t===m.ONE_COLUMN},{"two-columns":t===m.TWO_COLUMNS},_.className]);return a.default.createElement("div",c({},_,{className:v,ref:y}),w(r,i,o,"start"),a.default.createElement("div",{className:u("body")},x(p,t,n),f),w(l,!1,o,"end"))};h.propTypes=y,h.defaultProps=_,h.Display=r.default,h.Comment=r.default.Comment;var A=h;t.default=A},1212:function(e,t,n){e.exports={"item-view":"ItemView-module__item-view___61CR3",accessory:"ItemView-module__accessory___3Htik","start-accessory":"ItemView-module__start-accessory___2waGL","end-accessory":"ItemView-module__end-accessory___iFidE","accessory-align-top":"ItemView-module__accessory-align-top___2gmqS","accessory-align-center":"ItemView-module__accessory-align-center___1DO3t",body:"ItemView-module__body___SD0Vl",row:"ItemView-module__row___1_JaL",content:"ItemView-module__content___3wPtn","is-truncated":"ItemView-module__is-truncated___1duic","one-column":"ItemView-module__one-column___2LPcY","row-container":"ItemView-module__row-container___3YCG9","two-columns":"ItemView-module__two-columns___rwj9b","content-primary-color":"ItemView-module__content-primary-color___3af5E","content-primary-size":"ItemView-module__content-primary-size___3xYXg","content-secondary-color":"ItemView-module__content-secondary-color___3j2Dv","content-secondary-size":"ItemView-module__content-secondary-size___2MzM9"}},1232:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),s=i(n(4)),o=i(n(20)),r=i(n(1239));function i(e){return e&&e.__esModule?e:{default:e}}function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var c=s.default.bind(r.default),d=function(e){var t=l({},e),n=c(["IconAlert",e.className]);return a.default.createElement(o.default,l({className:n},t),a.default.createElement("path",{fill:"#E50000",d:"M1.2 45c-1.1 0-1.6-.8-1-1.7L23 3.7c.5-1 1.4-1 2 0l22.8 39.6c.5 1 .1 1.7-1 1.7H1.2z"}),a.default.createElement("path",{fill:"#FFF",d:"M21.5 36.7h5V42h-5v-5.3zm0-22.7h5v17.3h-5V14z"}))};d.displayName="IconAlert",d.defaultProps={viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"};var u=d;t.default=u},1239:function(e,t,n){e.exports={IconAlert:"IconAlert-module__IconAlert___A0JST"}},1246:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),s=o(n(20));function o(e){return e&&e.__esModule?e:{default:e}}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i=function(e){var t=r({},e);return a.default.createElement(s.default,t,a.default.createElement("path",{d:"M24 0a11.3 11.3 0 11-11.3 11.3A11.35 11.35 0 0124 0zm19.5 48v-5.7a16.77 16.77 0 00-16.8-16.8h-5.5A16.75 16.75 0 004.5 42.3V48z"}))};i.displayName="IconPerson",i.defaultProps={viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg","data-name":"Layer 1"};var l=i;t.default=l},1247:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),s=i(n(4)),o=i(n(20)),r=i(n(1256));function i(e){return e&&e.__esModule?e:{default:e}}function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var c=s.default.bind(r.default),d=function(e){var t=l({},e),n=c(["IconInformation",e.className]);return a.default.createElement(o.default,l({className:n},t),a.default.createElement("path",{fill:"#007CC3",d:"M24 0c13.3 0 24 10.7 24 24S37.3 48 24 48 0 37.3 0 24C0 10.8 10.7 0 23.9 0h.1z"}),a.default.createElement("path",{fill:"#FFF",d:"M24.1 32.7c.7-1.8 6.3-11 2.4-13.5-2.2-1.4-5.2-.5-7.6 1.2l-.2 1.6c1.4-.5 2.8-.5 3.2.7 1 2.9-2.5 8-3.5 10.7-2.6 7.2 3.7 8.1 8.1 5.1l.2-1.7c-2.3.6-4-.3-2.6-4.1zM26.5 8c1.9 0 3.5 1.6 3.5 3.5S28.4 15 26.5 15 23 13.4 23 11.5 24.6 8 26.5 8z"}))};d.displayName="IconInformation",d.defaultProps={viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"};var u=d;t.default=u},1256:function(e,t,n){e.exports={IconInformation:"IconInformation-module__IconInformation___mwQQR"}},1294:function(e){e.exports=JSON.parse('{"name":"terra-clinical-item-view","main":"lib/ItemView.js","version":"3.9.0","description":"The Item View component allows displays to be organized into rows and column and themed, while providing means to add accessory elements and a comment.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-clinical.git"},"keywords":["Cerner","Terra","Clinical","terra-clinical-item-view","ItemView","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-clinical/issues"},"homepage":"https://github.com/cerner/terra-clinical#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5"},"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","terra-clinical-item-display":"^3.9.0","terra-doc-template":"^2.0.0","terra-icon":"^3.0.0","terra-markdown":"^2.9.0","terra-mixins":"^1.0.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},1455:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),s=o(n(20));function o(e){return e&&e.__esModule?e:{default:e}}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i=function(e){var t=r({},e);return a.default.createElement(s.default,t,a.default.createElement("path",{d:"M42 26H6V11c0-1.7-1.3-3-3-3s-3 1.3-3 3v29h6v-8h36v8h6V26h-6z"}),a.default.createElement("path",{d:"M39 14H21v9h27c0-5-4-9-9-9z"}),a.default.createElement("circle",{cx:"13.5",cy:"18.5",r:"4.5"}))};i.displayName="IconBedRequested",i.defaultProps={viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"};var l=i;t.default=l},1896:function(e,t,n){"use strict";n.r(t),t.default="# Terra Clinical Item View\n\nThe Item View component allows displays to be organized into rows and column and themed, while providing means to add accessory elements and a comment.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-clinical-item-view`\n\n\n## Component Features\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\n"},1897:function(e,t,n){"use strict";n.r(t),t.default='When including icons as part of an `<ItemView.Display />`, it is reccomended to use the `iconAlignment="inline"` prop for best alignment and wrapping with the text.\n\n```jsx\nconst display1 = <ItemView.Display icon={<IconPerson />} iconAlignment="inline" text="Asif Khan" />;\nconst display2 = <ItemView.Display icon={<IconBriefcase />} iconAlignment="inline" text="Care Position: Primary" />;\n```\n'},1898:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport ItemDisplay from 'terra-clinical-item-display';\nimport styles from './ItemView.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst Layouts = {\n  ONE_COLUMN: 'oneColumn',\n  TWO_COLUMNS: 'twoColumns',\n};\n\nconst TextEmphasisTypes = {\n  DEFAULT: 'default',\n  START: 'start',\n};\n\nconst AccessoryAlignments = {\n  ALIGN_TOP: 'alignTop',\n  ALIGN_CENTER: 'alignCenter',\n};\n\nconst propTypes = {\n  /**\n   * The column layout in which to present the displays. One of `oneColumn`, `twoColumn`.\n   */\n  layout: PropTypes.oneOf(Object.values(Layouts)),\n  /**\n   * The text color emphasis when using two columns. One of `default`, `start`.\n   */\n  textEmphasis: PropTypes.oneOf(Object.values(TextEmphasisTypes)),\n  /**\n   * Whether or not all text on the view should be truncated.\n   */\n  isTruncated: PropTypes.bool,\n  /**\n   * The vertical alignment of the start and end accesories. One of `alignTop`, `alignCenter`.\n   */\n  accessoryAlignment: PropTypes.oneOf(Object.values(AccessoryAlignments)),\n  /**\n   * The react element to be placed in the start aligned accessory position.\n   */\n  startAccessory: PropTypes.node,\n  /**\n   * Indicates whether or not space is allocated for the start accessory if none is given.\n   */\n  reserveStartAccessorySpace: PropTypes.bool,\n  /**\n   * The react element to be placed in the end aligned accessory position.\n   */\n  endAccessory: PropTypes.node,\n  /**\n   * An array of terra-clinical-item-display's to be presented.\n   */\n  displays: PropTypes.arrayOf(PropTypes.element),\n  /**\n   * The react element for the comment element.\n   */\n  comment: PropTypes.node,\n  /**\n   * Function callback for the ref of the outer most div.\n   */\n  refCallback: PropTypes.func,\n};\n\nconst defaultProps = {\n  layout: Layouts.ONE_COLUMN,\n  textEmphasis: TextEmphasisTypes.DEFAULT,\n  isTruncated: false,\n  accessoryAlignment: AccessoryAlignments.ALIGN_CENTER,\n  startAccessory: undefined,\n  reserveStartAccessorySpace: false,\n  endAccessory: undefined,\n  displays: [],\n  comment: undefined,\n};\n\nconst renderAccessory = (accessory, reserveSpace, accessoryAlignment, type) => {\n  let accessorySection;\n  if (accessory || reserveSpace) {\n    const accessoryClassNames = cx(\n      'accessory',\n      `${type}-accessory`,\n      { 'accessory-align-center': accessoryAlignment === AccessoryAlignments.ALIGN_CENTER },\n      { 'accessory-align-top': accessoryAlignment === AccessoryAlignments.ALIGN_TOP },\n    );\n\n    accessorySection = (\n      <div className={accessoryClassNames}>\n        {accessory}\n      </div>\n    );\n  }\n  return accessorySection;\n};\n\nconst defaultEmphasisContentClassesFromIndexes = (rowIndex, rowCount) => {\n  let contentSize = 'content-primary-size';\n  let contentColor = 'content-primary-color';\n\n  if (rowIndex > 0) {\n    contentSize = 'content-secondary-size';\n  }\n\n  if (rowCount === 2 && rowIndex === 1) {\n    contentColor = 'content-secondary-color';\n  } else if (rowIndex >= 2) {\n    contentColor = 'content-secondary-color';\n  }\n\n  return [contentSize, contentColor];\n};\n\nconst startEmphasisContentClassesFromIndexes = (rowIndex, rowCount, contentIndex) => {\n  if (contentIndex === 1) {\n    return ['content-secondary-size', 'content-secondary-color'];\n  }\n\n  return defaultEmphasisContentClassesFromIndexes(rowIndex, rowCount);\n};\n\nconst classesForContent = (rowIndex, rowCount, contentIndex, emphasis) => {\n  let classes;\n  if (emphasis === TextEmphasisTypes.START) {\n    classes = startEmphasisContentClassesFromIndexes(rowIndex, rowCount, contentIndex);\n  } else {\n    classes = defaultEmphasisContentClassesFromIndexes(rowIndex, rowCount);\n  }\n  return ['content'].concat(classes);\n};\n\nconst renderRow = (row, rowIndex, rowCount, emphasis) => {\n  const rowKey = rowIndex;\n  return (\n    <div className={cx('row')} key={rowKey}>\n      {row.map((display, contentIndex) => {\n        const contentKey = contentIndex;\n        const contentClasses = classesForContent(rowIndex, rowCount, contentIndex, emphasis);\n        return (\n          <div className={cx(contentClasses)} key={contentKey}>\n            {display}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst renderRows = (displays, layout, emphasis) => {\n  if (displays === null || displays === undefined || !displays.length) {\n    return undefined;\n  }\n\n  const displayGroups = [];\n  const displaysSlice = displays.slice(0, 8);\n  const spliceValue = layout === Layouts.TWO_COLUMNS ? 2 : 1;\n\n  while (displaysSlice.length) {\n    displayGroups.push(displaysSlice.splice(0, spliceValue));\n  }\n\n  return (\n    <div className={cx('row-container')}>\n      {displayGroups.map((group, index) => {\n        const row = renderRow(group, index, displayGroups.length, emphasis);\n        return row;\n      })}\n    </div>\n  );\n};\n\nconst ItemView = ({\n  layout,\n  textEmphasis,\n  isTruncated,\n  accessoryAlignment,\n  startAccessory,\n  reserveStartAccessorySpace,\n  endAccessory,\n  displays,\n  comment,\n  refCallback,\n  ...customProps\n}) => {\n  const viewClassNames = cx([\n    'item-view',\n    { 'is-truncated': isTruncated },\n    { 'one-column': layout === Layouts.ONE_COLUMN },\n    { 'two-columns': layout === Layouts.TWO_COLUMNS },\n    customProps.className,\n  ]);\n\n  return (\n    <div {...customProps} className={viewClassNames} ref={refCallback}>\n      {renderAccessory(startAccessory, reserveStartAccessorySpace, accessoryAlignment, 'start')}\n      <div className={cx('body')}>\n        {renderRows(displays, layout, textEmphasis)}\n        {comment}\n      </div>\n      {renderAccessory(endAccessory, false, accessoryAlignment, 'end')}\n    </div>\n  );\n};\n\nItemView.propTypes = propTypes;\nItemView.defaultProps = defaultProps;\n\nItemView.Display = ItemDisplay;\nItemView.Comment = ItemDisplay.Comment;\n\nexport default ItemView;\nexport {\n  Layouts,\n  TextEmphasisTypes,\n  AccessoryAlignments,\n};\n"},1899:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=r(n(0)),s=r(n(1246)),o=r(n(1202));function r(e){return e&&e.__esModule?e:{default:e}}var i=[a.default.createElement(o.default.Display,{icon:a.default.createElement(s.default,null),iconAlignment:"inline",text:"Asif Khan"}),a.default.createElement(o.default.Display,{text:"Care Position: Primary"}),a.default.createElement(o.default.Display,{text:"Room 100A"}),a.default.createElement(o.default.Display,{text:"Acuity: 5"}),a.default.createElement(o.default.Display,{text:"Start Time: 08-05-2016 12:00:00"}),a.default.createElement(o.default.Display,{text:"End Time: 08-05-2016 16:00:00"})];t.default=function(){return a.default.createElement(o.default,{displays:i})}},1900:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport IconPerson from \'terra-icon/lib/icon/IconPerson\';\nimport ItemView from \'terra-clinical-item-view\';\n\nconst display1 = <ItemView.Display icon={<IconPerson />} iconAlignment="inline" text="Asif Khan" />;\nconst display2 = <ItemView.Display text="Care Position: Primary" />;\nconst display3 = <ItemView.Display text="Room 100A" />;\nconst display4 = <ItemView.Display text="Acuity: 5" />;\nconst display5 = <ItemView.Display text="Start Time: 08-05-2016 12:00:00" />;\nconst display6 = <ItemView.Display text="End Time: 08-05-2016 16:00:00" />;\nconst displays = [display1, display2, display3, display4, display5, display6];\n\nexport default () => <ItemView displays={displays} />;\n'},1901:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),s=i(n(1902)),o=i(n(1246)),r=i(n(1202));function i(e){return e&&e.__esModule?e:{default:e}}var l=[a.default.createElement(r.default.Display,{icon:a.default.createElement(o.default,null),iconAlignment:"inline",text:"Asif Khan"}),a.default.createElement(r.default.Display,{icon:a.default.createElement(s.default,null),iconAlignment:"inline",text:"Care Position: Primary"}),a.default.createElement(r.default.Display,{text:"Room 100A"}),a.default.createElement(r.default.Display,{text:"Acuity: 5"}),a.default.createElement(r.default.Display,{text:"Start Time: 08-05-2016 12:00:00"}),a.default.createElement(r.default.Display,{text:"End Time: 08-05-2016 16:00:00"})];t.default=function(){return a.default.createElement(r.default,{displays:l,layout:"twoColumns"})}},1902:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),s=o(n(20));function o(e){return e&&e.__esModule?e:{default:e}}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i=function(e){var t=r({},e);return a.default.createElement(s.default,t,a.default.createElement("path",{d:"M46.1 12H37V4c0-1.1-.9-2-2-2H13c-1.1 0-2 .9-2 2v8H1.9c-1 0-1.9.8-1.9 1.9v29.3c0 1 .8 1.9 1.9 1.9h44.3c1 0 1.9-.8 1.9-1.9V13.9c-.1-1.1-.9-1.9-2-1.9zM14 7h20v5H14V7zm21 20.6V31h-9v9h-4v-9h-9v-4h9v-9h4v9h9v.6z"}))};i.displayName="IconBriefcase",i.defaultProps={viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"};var l=i;t.default=l},1903:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport IconBriefcase from \'terra-icon/lib/icon/IconBriefcase\';\nimport IconPerson from \'terra-icon/lib/icon/IconPerson\';\nimport ItemView from \'terra-clinical-item-view\';\n\nconst display1 = <ItemView.Display icon={<IconPerson />} iconAlignment="inline" text="Asif Khan" />;\nconst display2 = <ItemView.Display icon={<IconBriefcase />} iconAlignment="inline" text="Care Position: Primary" />;\nconst display3 = <ItemView.Display text="Room 100A" />;\nconst display4 = <ItemView.Display text="Acuity: 5" />;\nconst display5 = <ItemView.Display text="Start Time: 08-05-2016 12:00:00" />;\nconst display6 = <ItemView.Display text="End Time: 08-05-2016 16:00:00" />;\nconst displays = [display1, display2, display3, display4, display5, display6];\n\nexport default () => <ItemView displays={displays} layout="twoColumns" />;\n'},1904:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=r(n(0)),s=r(n(1246)),o=r(n(1202));function r(e){return e&&e.__esModule?e:{default:e}}var i=[a.default.createElement(o.default.Display,{icon:a.default.createElement(s.default,null),iconAlignment:"inline",text:"Asif Khan"}),a.default.createElement(o.default.Display,{text:"Care Position: Primary"}),a.default.createElement(o.default.Display,{text:"Room 100A"}),a.default.createElement(o.default.Display,{text:"Acuity: 5"}),a.default.createElement(o.default.Display,{text:"Start Time: 08-05-2016 12:00:00"}),a.default.createElement(o.default.Display,{text:"End Time: 08-05-2016 16:00:00"})];t.default=function(){return a.default.createElement(o.default,{displays:i,layout:"twoColumns",textEmphasis:"start"})}},1905:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport IconPerson from \'terra-icon/lib/icon/IconPerson\';\nimport ItemView from \'terra-clinical-item-view\';\n\nconst display1 = <ItemView.Display icon={<IconPerson />} iconAlignment="inline" text="Asif Khan" />;\nconst display2 = <ItemView.Display text="Care Position: Primary" />;\nconst display3 = <ItemView.Display text="Room 100A" />;\nconst display4 = <ItemView.Display text="Acuity: 5" />;\nconst display5 = <ItemView.Display text="Start Time: 08-05-2016 12:00:00" />;\nconst display6 = <ItemView.Display text="End Time: 08-05-2016 16:00:00" />;\nconst displays = [display1, display2, display3, display4, display5, display6];\n\nexport default () => <ItemView displays={displays} layout="twoColumns" textEmphasis="start" />;\n'},1906:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=r(n(0)),s=r(n(1246)),o=r(n(1202));function r(e){return e&&e.__esModule?e:{default:e}}var i=[a.default.createElement(o.default.Display,{icon:a.default.createElement(s.default,null),iconAlignment:"inline",text:"Asif Khan"}),a.default.createElement(o.default.Display,{text:"Care Position: Primary"}),a.default.createElement(o.default.Display,{text:"Room 100A"}),a.default.createElement(o.default.Display,{text:"Acuity: 5"}),a.default.createElement(o.default.Display,{text:"Start Time: 08-05-2016 12:00:00"}),a.default.createElement(o.default.Display,{text:"End Time: 08-05-2016 16:00:00"})],l=a.default.createElement(o.default.Comment,{text:"Faint red rash appeared at 08-05-2016 13:24:00"});t.default=function(){return a.default.createElement(o.default,{displays:i,comment:l})}},1907:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport IconPerson from \'terra-icon/lib/icon/IconPerson\';\nimport ItemView from \'terra-clinical-item-view\';\n\nconst display1 = <ItemView.Display icon={<IconPerson />} iconAlignment="inline" text="Asif Khan" />;\nconst display2 = <ItemView.Display text="Care Position: Primary" />;\nconst display3 = <ItemView.Display text="Room 100A" />;\nconst display4 = <ItemView.Display text="Acuity: 5" />;\nconst display5 = <ItemView.Display text="Start Time: 08-05-2016 12:00:00" />;\nconst display6 = <ItemView.Display text="End Time: 08-05-2016 16:00:00" />;\nconst displays = [display1, display2, display3, display4, display5, display6];\n\nconst comment = <ItemView.Comment text="Faint red rash appeared at 08-05-2016 13:24:00" />;\n\nexport default () => <ItemView displays={displays} comment={comment} />;\n'},1908:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=c(n(0)),s=c(n(1246)),o=c(n(1232)),r=c(n(1247)),i=c(n(1455)),l=c(n(1202));function c(e){return e&&e.__esModule?e:{default:e}}var d=[a.default.createElement(l.default.Display,{icon:a.default.createElement(s.default,null),iconAlignment:"inline",text:"Asif Khan"}),a.default.createElement(l.default.Display,{icon:a.default.createElement(i.default,null),iconAlignment:"inline",text:"Pending Admit: Bed Requested"}),a.default.createElement(l.default.Display,{text:"Room 100A"}),a.default.createElement(l.default.Display,{text:"Acuity: 5"}),a.default.createElement(l.default.Display,{text:"Start Time: 08-05-2016 12:00:00"}),a.default.createElement(l.default.Display,{text:"End Time: 08-05-2016 16:00:00"})],u=a.default.createElement(l.default.Comment,{text:"Faint red rash appeared at 08-05-2016 13:24:00"}),m=a.default.createElement(o.default,null),p=a.default.createElement(r.default,null);t.default=function(){return a.default.createElement(l.default,{displays:d,layout:"twoColumns",isTruncated:!0,textEmphasis:"start",startAccessory:m,endAccessory:p,comment:u})}},1909:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport IconPerson from \'terra-icon/lib/icon/IconPerson\';\nimport IconAlert from \'terra-icon/lib/icon/IconAlert\';\nimport IconInformation from \'terra-icon/lib/icon/IconInformation\';\nimport IconBedRequested from \'terra-icon/lib/icon/IconBedRequested\';\nimport ItemView from \'terra-clinical-item-view\';\n\nconst display1 = <ItemView.Display icon={<IconPerson />} iconAlignment="inline" text="Asif Khan" />;\nconst display2 = <ItemView.Display icon={<IconBedRequested />} iconAlignment="inline" text="Pending Admit: Bed Requested" />;\nconst display3 = <ItemView.Display text="Room 100A" />;\nconst display4 = <ItemView.Display text="Acuity: 5" />;\nconst display5 = <ItemView.Display text="Start Time: 08-05-2016 12:00:00" />;\nconst display6 = <ItemView.Display text="End Time: 08-05-2016 16:00:00" />;\nconst displays = [display1, display2, display3, display4, display5, display6];\n\nconst comment = <ItemView.Comment text="Faint red rash appeared at 08-05-2016 13:24:00" />;\n\nconst accessoryStart = <IconAlert />;\nconst accessoryEnd = <IconInformation />;\n\nexport default () => (\n  <ItemView\n    displays={displays}\n    layout="twoColumns"\n    isTruncated\n    textEmphasis="start"\n    startAccessory={accessoryStart}\n    endAccessory={accessoryEnd}\n    comment={comment}\n  />\n);\n'},1910:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=c(n(0)),s=c(n(1246)),o=c(n(1232)),r=c(n(1247)),i=c(n(1455)),l=c(n(1202));function c(e){return e&&e.__esModule?e:{default:e}}var d=[a.default.createElement(l.default.Display,{icon:a.default.createElement(s.default,null),iconAlignment:"inline",text:"Asif Khan"}),a.default.createElement(l.default.Display,{icon:a.default.createElement(i.default,null),iconAlignment:"inline",text:"Pending Admit: Bed Requested"}),a.default.createElement(l.default.Display,{text:"Room 100A"}),a.default.createElement(l.default.Display,{text:"Acuity: 5"}),a.default.createElement(l.default.Display,{text:"Start Time: 08-05-2016 12:00:00"}),a.default.createElement(l.default.Display,{text:"End Time: 08-05-2016 16:00:00"})],u=a.default.createElement(l.default.Comment,{text:"Faint red rash appeared at 08-05-2016 13:24:00"}),m=a.default.createElement(o.default,null),p=a.default.createElement(r.default,null);t.default=function(){return a.default.createElement(l.default,{displays:d,layout:"twoColumns",isTruncated:!0,textEmphasis:"start",accessoryAlignment:"alignTop",startAccessory:m,endAccessory:p,comment:u})}},1911:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport IconPerson from \'terra-icon/lib/icon/IconPerson\';\nimport IconAlert from \'terra-icon/lib/icon/IconAlert\';\nimport IconInformation from \'terra-icon/lib/icon/IconInformation\';\nimport IconBedRequested from \'terra-icon/lib/icon/IconBedRequested\';\nimport ItemView from \'terra-clinical-item-view\';\n\nconst display1 = <ItemView.Display icon={<IconPerson />} iconAlignment="inline" text="Asif Khan" />;\nconst display2 = <ItemView.Display icon={<IconBedRequested />} iconAlignment="inline" text="Pending Admit: Bed Requested" />;\nconst display3 = <ItemView.Display text="Room 100A" />;\nconst display4 = <ItemView.Display text="Acuity: 5" />;\nconst display5 = <ItemView.Display text="Start Time: 08-05-2016 12:00:00" />;\nconst display6 = <ItemView.Display text="End Time: 08-05-2016 16:00:00" />;\nconst displays = [display1, display2, display3, display4, display5, display6];\n\nconst comment = <ItemView.Comment text="Faint red rash appeared at 08-05-2016 13:24:00" />;\n\nconst accessoryStart = <IconAlert />;\nconst accessoryEnd = <IconInformation />;\n\nexport default () => (\n  <ItemView\n    displays={displays}\n    layout="twoColumns"\n    isTruncated\n    textEmphasis="start"\n    accessoryAlignment="alignTop"\n    startAccessory={accessoryStart}\n    endAccessory={accessoryEnd}\n    comment={comment}\n  />\n);\n'},1980:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=A(n(0)),s=A(n(1200)),o=A(n(1356)),r=A(n(1896)),i=A(n(1897)),l=n(1294),c=A(n(1898)),d=A(n(1899)),u=A(n(1900)),m=A(n(1901)),p=A(n(1903)),f=A(n(1904)),y=A(n(1905)),_=A(n(1906)),w=A(n(1907)),v=A(n(1908)),I=A(n(1909)),x=A(n(1910)),h=A(n(1911));function A(e){return e&&e.__esModule?e:{default:e}}var E=function(){return a.default.createElement(s.default,{packageName:l.name,readme:r.default,srcPath:"https://github.com/cerner/terra-clinical/tree/master/packages/".concat(l.name),examples:[{title:"ItemView - Default",example:a.default.createElement(d.default,null),source:u.default},{title:"ItemView - Two Column Layout",description:a.default.createElement(o.default,{id:"item-view-two-column-docs",src:i.default}),example:a.default.createElement(m.default,null),source:p.default},{title:"ItemView - Start Emphasis",example:a.default.createElement(f.default,null),source:y.default},{title:"ItemView - Comment",example:a.default.createElement(_.default,null),source:w.default},{title:"ItemView - All Elements",example:a.default.createElement(v.default,null),source:I.default},{title:"ItemView - All Elements Top Aligned",example:a.default.createElement(x.default,null),source:h.default}],propsTables:[{componentName:"Item View",componentSrc:c.default}]})};t.default=E}}]);
//# sourceMappingURL=49-64dab969c41bf31341e2.js.map